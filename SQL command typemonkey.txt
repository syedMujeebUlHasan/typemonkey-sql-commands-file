SELECT * FROM customers;
INSERT INTO products (name, price) VALUES ('Keyboard', 45.99);
UPDATE employees SET salary = salary * 1.05 WHERE department = 'IT';
SELECT DISTINCT country FROM suppliers;
DELETE FROM users WHERE last_login < '2024-01-01';
CREATE DATABASE company_data;
DROP TABLE temp_sessions;
SELECT id, name, age FROM students WHERE age >= 18 ORDER BY name ASC;
ALTER TABLE orders ADD COLUMN delivery_date DATE;
CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50));
SELECT COUNT(*) FROM orders WHERE status = 'completed';
SELECT product_id, SUM(quantity) FROM sales GROUP BY product_id;
SELECT name, city FROM customers WHERE city LIKE 'K%';
SELECT AVG(salary) FROM employees WHERE department = 'Finance';
UPDATE products SET stock = stock - 1 WHERE id = 25;
SELECT o.order_id, c.name FROM orders o JOIN customers c ON o.customer_id = c.id;
SELECT s.name, c.course_name FROM students s INNER JOIN courses c ON s.course_id = c.id;
SELECT * FROM books WHERE price BETWEEN 10 AND 50;
CREATE INDEX idx_email ON users(email);
SELECT region, SUM(revenue) FROM sales GROUP BY region ORDER BY SUM(revenue) DESC;
DELETE FROM transactions WHERE amount = 0;
SELECT department, COUNT(*) FROM employees GROUP BY department;
SELECT * FROM logs ORDER BY created_at DESC LIMIT 10;
ALTER TABLE users RENAME COLUMN fullname TO name;
SELECT NOW();
UPDATE orders SET status = 'shipped' WHERE id = 1001;
SELECT * FROM inventory WHERE quantity < 10;
SELECT id, name FROM employees WHERE hire_date > '2022-06-01';
INSERT INTO orders (customer_id, total) VALUES (12, 250.75);
SELECT category, MAX(price) FROM products GROUP BY category;
DROP DATABASE test_db;
CREATE SCHEMA analytics;
SELECT email FROM users WHERE email IS NOT NULL;
SELECT COUNT(DISTINCT user_id) FROM logins;
SELECT p.name, s.supplier_name FROM products p LEFT JOIN suppliers s ON p.supplier_id = s.id;
SELECT department, ROUND(AVG(salary), 2) AS avg_salary FROM employees GROUP BY department;
UPDATE employees SET bonus = salary * 0.1;
SELECT * FROM products ORDER BY price DESC LIMIT 5;
SELECT * FROM users WHERE username ILIKE 'admin%';
CREATE VIEW top_customers AS SELECT customer_id, SUM(total) AS total_spent FROM orders GROUP BY customer_id HAVING SUM(total) > 1000;
SELECT * FROM top_customers;
DELETE FROM feedback WHERE rating < 3;
SELECT c.name, COUNT(o.id) AS order_count FROM customers c JOIN orders o ON c.id = o.customer_id GROUP BY c.name;
CREATE TABLE sales (id SERIAL, product_id INT, quantity INT, price DECIMAL);
SELECT * FROM sales WHERE quantity > 10 AND price > 50;
ALTER TABLE employees DROP COLUMN middle_name;
SELECT EXTRACT(YEAR FROM hire_date) AS year, COUNT(*) FROM employees GROUP BY year;
SELECT name FROM cities ORDER BY LENGTH(name) DESC;
UPDATE users SET active = TRUE WHERE last_login >= CURRENT_DATE - INTERVAL '7 days';
SELECT * FROM posts WHERE content ILIKE '%postgres%';
INSERT INTO messages (sender_id, receiver_id, message) VALUES (1, 2, 'Hello there');
SELECT MIN(price), MAX(price) FROM products;
SELECT * FROM orders WHERE total BETWEEN 100 AND 500 ORDER BY total DESC;
SELECT * FROM students WHERE class_id IN (10, 12, 14);
CREATE ROLE analyst LOGIN PASSWORD 'secure123';
GRANT SELECT ON ALL TABLES IN SCHEMA public TO analyst;
REVOKE UPDATE ON employees FROM analyst;
SELECT version();
SELECT d.name, COUNT(e.id) FROM departments d LEFT JOIN employees e ON d.id = e.dept_id GROUP BY d.name;
SELECT * FROM books LIMIT 20 OFFSET 10;
SELECT name, salary, RANK() OVER (ORDER BY salary DESC) AS rank FROM employees;
SELECT country, COUNT(*) FROM customers GROUP BY country HAVING COUNT(*) > 5;
WITH total_orders AS (SELECT customer_id, SUM(total) AS total_spent FROM orders GROUP BY customer_id)
SELECT * FROM total_orders WHERE total_spent > 5000;
SELECT user_id, COUNT(*) FILTER (WHERE success = TRUE) AS success_count FROM logins GROUP BY user_id;
SELECT product_id, SUM(price * quantity) AS revenue FROM sales GROUP BY product_id ORDER BY revenue DESC;
UPDATE students SET grade = 'A' WHERE marks >= 85;
SELECT DISTINCT department FROM employees ORDER BY department;
DELETE FROM notifications WHERE read = TRUE;
SELECT * FROM suppliers WHERE country = 'Pakistan';
ALTER TABLE customers ADD COLUMN phone VARCHAR(15);
SELECT EXTRACT(MONTH FROM order_date) AS month, SUM(total) FROM orders GROUP BY month;
SELECT * FROM orders WHERE order_date >= CURRENT_DATE - INTERVAL '30 days';
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
INSERT INTO users (id, username) VALUES (uuid_generate_v4(), 'new_user');
SELECT u.username, COUNT(p.id) FROM users u JOIN posts p ON u.id = p.user_id GROUP BY u.username;
SELECT ROUND(AVG(age), 1) FROM students WHERE gender = 'M';
SELECT * FROM employees WHERE department IN ('HR', 'Sales', 'IT');
DROP VIEW IF EXISTS top_customers;
VACUUM ANALYZE;
SELECT pg_size_pretty(pg_database_size('company_data'));
CREATE TEMP TABLE temp_data AS SELECT * FROM orders LIMIT 100;
SELECT * FROM temp_data;
TRUNCATE TABLE logs RESTART IDENTITY;
SELECT * FROM audit_log WHERE action = 'DELETE';
SELECT CURRENT_USER;
SELECT current_database();
SELECT * FROM sessions WHERE expired = FALSE;
SELECT category, COUNT(*) AS items FROM products GROUP BY category ORDER BY items DESC;
SELECT date_trunc('month', order_date) AS month, SUM(total) FROM orders GROUP BY month;
SELECT product_id, quantity, price, quantity * price AS total FROM sales;
SELECT email, SUBSTRING(email FROM POSITION('@' IN email) + 1) AS domain FROM users;
SELECT * FROM projects WHERE end_date IS NULL;